<?php


class Session_M extends MY_Model
{

///////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////// INHERITED PROPERTIES //////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
    protected $_model_name='Session_M.php';
	protected $_table_name = 'sessions';
    
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////// PUBLIC PROPERTIES /////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
        public $DB_COL_ARRAY=array();
        public $STATUS_ACTIVE='ACTIVE';                 //if ACTIVE
        public $STATUS_UPCOMING='UPCOMING';             //if UPCOMING
        public $STATUS_PASSED='PASSED';                 //if PASSED IN PAST
        





//////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////// PUBLIC FUNCTIONS /////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////
	

	function __construct (){
		parent::__construct();
	}
///////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////// SETTER FUNCTIONS //////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////

//Initialize some Componenets on new row addition (optional)
public function init_tasks($data){ 
//init other models
return true;   
  
}
//ADD NEW TABLE ROW IN DATABASE 
public function add_row($vals){
    //GET ALL THE FIELDS IN ARRAY  
    $db_row=  $this->grab_row($vals);        
    //PERFROM DIFFERENCT CHECKS BEFORE DATA INSERTION (OPTIONAL)
    ////////////////////////////////////////////////////////////////////////
    if(empty($db_row['status'])){$db_row['status']=$this->STATUS_UPCOMING;}
    $db_row['date']=$this->date;
    
    //SAVE DATA INTO DATABASE
    return $this->save_db_row($db_row);
}
//VALIDATE DATA BEFORE SAVING NEW RECORD
public function is_valid_data($data){
    if(empty($data['title'])){
        return false;}
    
    ///////////// data is valid to insert or update
    return true;
    
}	 


/////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////// GETTER FUNCTIONS ////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////
//return organization active session
public function getActiveSession(){
    $filter=array('status'=>$this->STATUS_ACTIVE);
    $row=$this->get_by($filter,true);
    return $row;
}


//check if there is no session. then create default session.
public function validate_default_sessions(){
    if($this->get_rows(array(),'',true)<1){
        $active_session_data=array('title'=>date('Y').'-'.(intval(date('Y'))+1),'status'=>$this->STATUS_ACTIVE,'start_date'=>$this->date,'year'=>$this->year);
        $this->add_row($active_session_data);
        $upcoming_session_data=array('title'=>(intval(date('Y'))+1).'-'.(intval(date('Y'))+2),'status'=>$this->STATUS_UPCOMING,'year'=>($this->year+1));
        $this->add_row($upcoming_session_data);
    }
}








//////////////////////////////////////////////// END OF CLASS /////////////////////
}